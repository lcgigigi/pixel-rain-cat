Vue3 H5 项目目录结构
════════════════════════════════════════════════════════════

demo/                                   # 项目根目录
│
├── 📄 启动项目.bat                     # Windows快速启动脚本（双击运行）
├── 📄 开始使用.md                      # 新手入门指南（推荐先看）
├── 📄 快速启动.md                      # 快速启动教程
├── 📄 README.md                        # 完整项目文档
├── 📄 DEPLOYMENT.md                    # 详细部署教程
├── 📄 项目说明.txt                     # 项目概览
├── 📄 项目清单.md                      # 功能清单
├── 📄 目录结构.txt                     # 本文件
│
├── 📄 package.json                     # 项目依赖配置
├── 📄 vite.config.js                   # Vite 配置文件
├── 📄 index.html                       # HTML 入口
├── 📄 .gitignore                       # Git 忽略配置
├── 📄 .gitattributes                   # Git 属性配置
├── 📄 vercel.json                      # Vercel 部署配置
├── 📄 netlify.toml                     # Netlify 部署配置
│
├── 📁 public/                          # 公共静态资源
│   └── vite.svg                        # Vite 图标
│
├── 📁 .github/                         # GitHub 配置
│   └── workflows/                      # GitHub Actions
│       └── deploy.yml                  # 自动部署配置
│
└── 📁 src/                             # 源代码目录 ⭐
    ├── 📄 main.js                      # 应用主入口
    ├── 📄 App.vue                      # 根组件
    ├── 📄 style.css                    # 全局样式
    │
    ├── 📁 router/                      # 路由配置
    │   └── index.js                    # 路由定义
    │
    └── 📁 views/                       # 页面组件
        ├── Home.vue                    # 首页组件
        └── About.vue                   # 关于页组件


════════════════════════════════════════════════════════════
📂 目录说明
════════════════════════════════════════════════════════════

【根目录文件】
  启动项目.bat       双击即可运行（Windows系统）
  开始使用.md        新手友好的入门教程
  快速启动.md        简明启动指南
  README.md          完整的项目说明文档
  DEPLOYMENT.md      各种部署方法的详细教程
  项目说明.txt       文本格式的项目概览
  项目清单.md        功能和文件清单
  package.json       npm 依赖和脚本配置
  vite.config.js     Vite 构建配置
  index.html         应用的 HTML 模板

【配置文件】
  .gitignore         Git 忽略规则
  .gitattributes     Git 文件属性
  vercel.json        Vercel 平台部署配置
  netlify.toml       Netlify 平台部署配置

【public/ 目录】
  存放不需要编译的静态资源
  这里的文件会被直接复制到构建输出

【src/ 目录】⭐ 主要工作目录
  main.js            创建 Vue 应用实例，挂载路由
  App.vue            应用的根组件
  style.css          全局 CSS 样式

  router/            路由配置目录
    index.js         定义应用的路由规则

  views/             页面组件目录
    Home.vue         首页（包含计数器、留言板等）
    About.vue        关于页（技术栈、统计等）


════════════════════════════════════════════════════════════
📝 核心文件详解
════════════════════════════════════════════════════════════

【main.js】
  作用: 应用入口，初始化 Vue 应用
  内容: 导入 Vue、Router、全局样式，创建应用

【App.vue】
  作用: 根组件，包含路由出口
  内容: <router-view /> 组件，用于渲染路由匹配的页面

【router/index.js】
  作用: 路由配置
  内容: 定义 URL 路径与组件的映射关系
  路由:
    /       → Home.vue   (首页)
    /about  → About.vue  (关于页)

【views/Home.vue】
  作用: 首页组件
  功能:
    - 功能特性展示卡片
    - 交互式计数器（加减、重置）
    - 留言板（发送、查看留言）
    - 导航到关于页

【views/About.vue】
  作用: 关于页组件
  功能:
    - 技术栈展示
    - 项目特性列表
    - 联系方式（点击复制）
    - 数据统计（可刷新）
    - 开发历程时间线
    - 返回首页导航


════════════════════════════════════════════════════════════
🚀 快速开始
════════════════════════════════════════════════════════════

1. 双击运行 "启动项目.bat"（Windows）
   或运行: npm install && npm run dev

2. 浏览器自动打开 http://localhost:3000

3. 开始开发：
   - 修改 src/views/ 下的页面文件
   - 保存后自动刷新


════════════════════════════════════════════════════════════
📱 在手机上访问
════════════════════════════════════════════════════════════

【开发时】
  同一WiFi下，访问终端显示的 Network 地址
  例如: http://192.168.1.100:3000

【部署后】
  访问部署平台给的网址
  推荐使用 Vercel: https://vercel.com
  详见: DEPLOYMENT.md


════════════════════════════════════════════════════════════
🎯 推荐阅读顺序
════════════════════════════════════════════════════════════

新手用户:
  1. 开始使用.md     ← 从这里开始
  2. 快速启动.md
  3. DEPLOYMENT.md   ← 学习如何部署

开发用户:
  1. README.md       ← 了解项目架构
  2. 查看源代码
  3. DEPLOYMENT.md   ← 部署到生产环境

学习用户:
  1. 项目说明.txt    ← 快速了解
  2. 目录结构.txt    ← 本文件
  3. 阅读源代码      ← 学习 Vue3


════════════════════════════════════════════════════════════

🎉 项目已准备就绪，开始你的开发之旅吧！

════════════════════════════════════════════════════════════

